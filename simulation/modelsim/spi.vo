// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.1.0 Build 196 10/24/2016 SJ Lite Edition"

// DATE "02/26/2017 22:58:10"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module top (
	clk,
	reset,
	sck,
	ss,
	mosi,
	miso,
	led);
input 	clk;
input 	reset;
input 	sck;
input 	ss;
input 	mosi;
output 	miso;
output 	led;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \ss~combout ;
wire \reset~combout ;
wire \sck~combout ;
wire \s_slave|mosi_counter[3]~4 ;
wire \s_slave|Equal0~0_combout ;
wire \s_slave|Add0~0_combout ;
wire \s_slave|finished~0_combout ;
wire \mosi~combout ;
wire \s_slave|mosi_data~0 ;
wire \s_slave|mosi_data~regout ;
wire \d[1]~13 ;
wire \d[1]~13COUT1_16 ;
wire \d[2]~11 ;
wire \d[2]~11COUT1_17 ;
wire \d[3]~9 ;
wire \d[3]~9COUT1_18 ;
wire \d[4]~7 ;
wire \d[5]~5 ;
wire \d[5]~5COUT1_19 ;
wire \d[6]~3 ;
wire \d[6]~3COUT1_20 ;
wire \s_slave|miso~0_combout ;
wire \s_slave|miso~1_combout ;
wire [2:0] \s_slave|sck_state ;
wire [2:0] \s_slave|ss_state ;
wire [7:0] \s_slave|q ;
wire [7:0] d;
wire [3:0] \s_slave|mosi_counter ;


// Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_26,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \ss~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\ss~combout ),
	.padio(ss));
// synopsys translate_off
defparam \ss~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\reset~combout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y2_N3
maxii_lcell \s_slave|ss_state[0] (
// Equation(s):
// \s_slave|ss_state [0] = DFFEAS((\ss~combout ), GLOBAL(\clk~combout ), VCC, , , VCC, GLOBAL(\reset~combout ), , )

	.clk(\clk~combout ),
	.dataa(\ss~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(\reset~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|ss_state [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|ss_state[0] .lut_mask = "aaaa";
defparam \s_slave|ss_state[0] .operation_mode = "normal";
defparam \s_slave|ss_state[0] .output_mode = "reg_only";
defparam \s_slave|ss_state[0] .register_cascade_mode = "off";
defparam \s_slave|ss_state[0] .sum_lutc_input = "datac";
defparam \s_slave|ss_state[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N4
maxii_lcell \s_slave|ss_state[1] (
// Equation(s):
// \s_slave|ss_state [1] = DFFEAS((((\s_slave|ss_state [0]))), GLOBAL(\clk~combout ), VCC, , , VCC, GLOBAL(\reset~combout ), , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\s_slave|ss_state [0]),
	.aclr(gnd),
	.aload(\reset~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|ss_state [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|ss_state[1] .lut_mask = "ff00";
defparam \s_slave|ss_state[1] .operation_mode = "normal";
defparam \s_slave|ss_state[1] .output_mode = "reg_only";
defparam \s_slave|ss_state[1] .register_cascade_mode = "off";
defparam \s_slave|ss_state[1] .sum_lutc_input = "datac";
defparam \s_slave|ss_state[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N3
maxii_lcell \s_slave|ss_state[2] (
// Equation(s):
// \s_slave|ss_state [2] = DFFEAS((((\s_slave|ss_state [1]))), GLOBAL(\clk~combout ), VCC, , , VCC, GLOBAL(\reset~combout ), , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\s_slave|ss_state [1]),
	.aclr(gnd),
	.aload(\reset~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|ss_state [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|ss_state[2] .lut_mask = "ff00";
defparam \s_slave|ss_state[2] .operation_mode = "normal";
defparam \s_slave|ss_state[2] .output_mode = "reg_only";
defparam \s_slave|ss_state[2] .register_cascade_mode = "off";
defparam \s_slave|ss_state[2] .sum_lutc_input = "datac";
defparam \s_slave|ss_state[2] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \sck~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\sck~combout ),
	.padio(sck));
// synopsys translate_off
defparam \sck~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N6
maxii_lcell \s_slave|sck_state[0] (
// Equation(s):
// \s_slave|sck_state [0] = DFFEAS((\sck~combout ), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\sck~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|sck_state [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|sck_state[0] .lut_mask = "aaaa";
defparam \s_slave|sck_state[0] .operation_mode = "normal";
defparam \s_slave|sck_state[0] .output_mode = "reg_only";
defparam \s_slave|sck_state[0] .register_cascade_mode = "off";
defparam \s_slave|sck_state[0] .sum_lutc_input = "datac";
defparam \s_slave|sck_state[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N7
maxii_lcell \s_slave|sck_state[1] (
// Equation(s):
// \s_slave|mosi_counter[3]~4  = (!\s_slave|ss_state [1] & ((\s_slave|ss_state [2]) # ((\s_slave|sck_state [2] & !B1_sck_state[1]))))
// \s_slave|sck_state [1] = DFFEAS(\s_slave|mosi_counter[3]~4 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \s_slave|sck_state [0], , , VCC)

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|sck_state [2]),
	.datac(\s_slave|sck_state [0]),
	.datad(\s_slave|ss_state [1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|mosi_counter[3]~4 ),
	.regout(\s_slave|sck_state [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|sck_state[1] .lut_mask = "00ae";
defparam \s_slave|sck_state[1] .operation_mode = "normal";
defparam \s_slave|sck_state[1] .output_mode = "reg_and_comb";
defparam \s_slave|sck_state[1] .register_cascade_mode = "off";
defparam \s_slave|sck_state[1] .sum_lutc_input = "qfbk";
defparam \s_slave|sck_state[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxii_lcell \s_slave|sck_state[2] (
// Equation(s):
// \s_slave|mosi_data~0  = (!\s_slave|ss_state [2] & (\s_slave|sck_state [1] & (!B1_sck_state[2] & !\s_slave|ss_state [1])))
// \s_slave|sck_state [2] = DFFEAS(\s_slave|mosi_data~0 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \s_slave|sck_state [1], , , VCC)

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|sck_state [1]),
	.datac(\s_slave|sck_state [1]),
	.datad(\s_slave|ss_state [1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|mosi_data~0 ),
	.regout(\s_slave|sck_state [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|sck_state[2] .lut_mask = "0004";
defparam \s_slave|sck_state[2] .operation_mode = "normal";
defparam \s_slave|sck_state[2] .output_mode = "reg_and_comb";
defparam \s_slave|sck_state[2] .register_cascade_mode = "off";
defparam \s_slave|sck_state[2] .sum_lutc_input = "qfbk";
defparam \s_slave|sck_state[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N1
maxii_lcell \s_slave|mosi_counter[0] (
// Equation(s):
// \s_slave|mosi_counter [0] = DFFEAS((!\s_slave|mosi_counter [0] & ((\s_slave|ss_state [1]) # ((!\s_slave|ss_state [2])))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [1]),
	.datab(\s_slave|ss_state [2]),
	.datac(\s_slave|mosi_counter [0]),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|mosi_counter [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|mosi_counter[0] .lut_mask = "0b0b";
defparam \s_slave|mosi_counter[0] .operation_mode = "normal";
defparam \s_slave|mosi_counter[0] .output_mode = "reg_only";
defparam \s_slave|mosi_counter[0] .register_cascade_mode = "off";
defparam \s_slave|mosi_counter[0] .sum_lutc_input = "datac";
defparam \s_slave|mosi_counter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N6
maxii_lcell \s_slave|mosi_counter[1] (
// Equation(s):
// \s_slave|mosi_counter [1] = DFFEAS((\s_slave|ss_state [1] & (\s_slave|mosi_counter [0] $ ((\s_slave|mosi_counter [1])))) # (!\s_slave|ss_state [1] & (!\s_slave|ss_state [2] & (\s_slave|mosi_counter [0] $ (\s_slave|mosi_counter [1])))), GLOBAL(\clk~combout 
// ), !GLOBAL(\reset~combout ), , \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [1]),
	.datab(\s_slave|mosi_counter [0]),
	.datac(\s_slave|mosi_counter [1]),
	.datad(\s_slave|ss_state [2]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|mosi_counter [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|mosi_counter[1] .lut_mask = "283c";
defparam \s_slave|mosi_counter[1] .operation_mode = "normal";
defparam \s_slave|mosi_counter[1] .output_mode = "reg_only";
defparam \s_slave|mosi_counter[1] .register_cascade_mode = "off";
defparam \s_slave|mosi_counter[1] .sum_lutc_input = "datac";
defparam \s_slave|mosi_counter[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N4
maxii_lcell \s_slave|Equal0~0 (
// Equation(s):
// \s_slave|Equal0~0_combout  = (\s_slave|ss_state [2] & (((!\s_slave|ss_state [1]))))

	.clk(gnd),
	.dataa(\s_slave|ss_state [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(\s_slave|ss_state [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|Equal0~0 .lut_mask = "00aa";
defparam \s_slave|Equal0~0 .operation_mode = "normal";
defparam \s_slave|Equal0~0 .output_mode = "comb_only";
defparam \s_slave|Equal0~0 .register_cascade_mode = "off";
defparam \s_slave|Equal0~0 .sum_lutc_input = "datac";
defparam \s_slave|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N8
maxii_lcell \s_slave|mosi_counter[2] (
// Equation(s):
// \s_slave|mosi_counter [2] = DFFEAS((!\s_slave|Equal0~0_combout  & (\s_slave|mosi_counter [2] $ (((\s_slave|mosi_counter [0] & \s_slave|mosi_counter [1]))))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|mosi_counter [2]),
	.datab(\s_slave|mosi_counter [0]),
	.datac(\s_slave|mosi_counter [1]),
	.datad(\s_slave|Equal0~0_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|mosi_counter [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|mosi_counter[2] .lut_mask = "006a";
defparam \s_slave|mosi_counter[2] .operation_mode = "normal";
defparam \s_slave|mosi_counter[2] .output_mode = "reg_only";
defparam \s_slave|mosi_counter[2] .register_cascade_mode = "off";
defparam \s_slave|mosi_counter[2] .sum_lutc_input = "datac";
defparam \s_slave|mosi_counter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N3
maxii_lcell \s_slave|Add0~0 (
// Equation(s):
// \s_slave|Add0~0_combout  = ((\s_slave|mosi_counter [0] & (\s_slave|mosi_counter [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\s_slave|mosi_counter [0]),
	.datac(\s_slave|mosi_counter [1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|Add0~0 .lut_mask = "c0c0";
defparam \s_slave|Add0~0 .operation_mode = "normal";
defparam \s_slave|Add0~0 .output_mode = "comb_only";
defparam \s_slave|Add0~0 .register_cascade_mode = "off";
defparam \s_slave|Add0~0 .sum_lutc_input = "datac";
defparam \s_slave|Add0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N5
maxii_lcell \s_slave|mosi_counter[3] (
// Equation(s):
// \s_slave|mosi_counter [3] = DFFEAS((!\s_slave|Equal0~0_combout  & (\s_slave|mosi_counter [3] $ (((\s_slave|mosi_counter [2] & \s_slave|Add0~0_combout ))))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|mosi_counter [2]),
	.datab(\s_slave|Equal0~0_combout ),
	.datac(\s_slave|mosi_counter [3]),
	.datad(\s_slave|Add0~0_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|mosi_counter [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|mosi_counter[3] .lut_mask = "1230";
defparam \s_slave|mosi_counter[3] .operation_mode = "normal";
defparam \s_slave|mosi_counter[3] .output_mode = "reg_only";
defparam \s_slave|mosi_counter[3] .register_cascade_mode = "off";
defparam \s_slave|mosi_counter[3] .sum_lutc_input = "datac";
defparam \s_slave|mosi_counter[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N0
maxii_lcell \s_slave|finished~0 (
// Equation(s):
// \s_slave|finished~0_combout  = (!\s_slave|mosi_counter [1] & (!\s_slave|mosi_counter [0] & (\s_slave|mosi_counter [3] & !\s_slave|mosi_counter [2])))

	.clk(gnd),
	.dataa(\s_slave|mosi_counter [1]),
	.datab(\s_slave|mosi_counter [0]),
	.datac(\s_slave|mosi_counter [3]),
	.datad(\s_slave|mosi_counter [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|finished~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|finished~0 .lut_mask = "0010";
defparam \s_slave|finished~0 .operation_mode = "normal";
defparam \s_slave|finished~0 .output_mode = "comb_only";
defparam \s_slave|finished~0 .register_cascade_mode = "off";
defparam \s_slave|finished~0 .sum_lutc_input = "datac";
defparam \s_slave|finished~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \mosi~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\mosi~combout ),
	.padio(mosi));
// synopsys translate_off
defparam \mosi~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxii_lcell \s_slave|mosi_data (
// Equation(s):
// \s_slave|mosi_data~regout  = DFFEAS(((\s_slave|mosi_data~0  & (\mosi~combout )) # (!\s_slave|mosi_data~0  & ((\s_slave|mosi_data~regout )))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\mosi~combout ),
	.datab(\s_slave|mosi_data~regout ),
	.datac(vcc),
	.datad(\s_slave|mosi_data~0 ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|mosi_data~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|mosi_data .lut_mask = "aacc";
defparam \s_slave|mosi_data .operation_mode = "normal";
defparam \s_slave|mosi_data .output_mode = "reg_only";
defparam \s_slave|mosi_data .register_cascade_mode = "off";
defparam \s_slave|mosi_data .sum_lutc_input = "datac";
defparam \s_slave|mosi_data .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N2
maxii_lcell \d[0] (
// Equation(s):
// d[0] = DFFEAS(((\s_slave|finished~0_combout  & ((!\s_slave|q [0]))) # (!\s_slave|finished~0_combout  & (d[0]))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(d[0]),
	.datab(vcc),
	.datac(\s_slave|finished~0_combout ),
	.datad(\s_slave|q [0]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \d[0] .lut_mask = "0afa";
defparam \d[0] .operation_mode = "normal";
defparam \d[0] .output_mode = "reg_only";
defparam \d[0] .register_cascade_mode = "off";
defparam \d[0] .sum_lutc_input = "datac";
defparam \d[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N5
maxii_lcell \s_slave|q[0] (
// Equation(s):
// \s_slave|q [0] = DFFEAS((\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & (\s_slave|mosi_data~regout )) # (!\s_slave|ss_state [1] & ((d[0]))))) # (!\s_slave|ss_state [2] & (\s_slave|mosi_data~regout )), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|mosi_data~regout ),
	.datac(d[0]),
	.datad(\s_slave|ss_state [1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[0] .lut_mask = "cce4";
defparam \s_slave|q[0] .operation_mode = "normal";
defparam \s_slave|q[0] .output_mode = "reg_only";
defparam \s_slave|q[0] .register_cascade_mode = "off";
defparam \s_slave|q[0] .sum_lutc_input = "datac";
defparam \s_slave|q[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N1
maxii_lcell \d[1] (
// Equation(s):
// d[1] = DFFEAS(\s_slave|q [0] $ ((\s_slave|q [1])), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )
// \d[1]~13  = CARRY((\s_slave|q [0] & (\s_slave|q [1])))
// \d[1]~13COUT1_16  = CARRY((\s_slave|q [0] & (\s_slave|q [1])))

	.clk(\clk~combout ),
	.dataa(\s_slave|q [0]),
	.datab(\s_slave|q [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[1]),
	.cout(),
	.cout0(\d[1]~13 ),
	.cout1(\d[1]~13COUT1_16 ));
// synopsys translate_off
defparam \d[1] .lut_mask = "6688";
defparam \d[1] .operation_mode = "arithmetic";
defparam \d[1] .output_mode = "reg_only";
defparam \d[1] .register_cascade_mode = "off";
defparam \d[1] .sum_lutc_input = "datac";
defparam \d[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N4
maxii_lcell \s_slave|q[1] (
// Equation(s):
// \s_slave|q [1] = DFFEAS((\s_slave|ss_state [1] & (((\s_slave|q [0])))) # (!\s_slave|ss_state [1] & ((\s_slave|ss_state [2] & ((d[1]))) # (!\s_slave|ss_state [2] & (\s_slave|q [0])))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [1]),
	.datab(\s_slave|ss_state [2]),
	.datac(\s_slave|q [0]),
	.datad(d[1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[1] .lut_mask = "f4b0";
defparam \s_slave|q[1] .operation_mode = "normal";
defparam \s_slave|q[1] .output_mode = "reg_only";
defparam \s_slave|q[1] .register_cascade_mode = "off";
defparam \s_slave|q[1] .sum_lutc_input = "datac";
defparam \s_slave|q[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N2
maxii_lcell \d[2] (
// Equation(s):
// d[2] = DFFEAS((\s_slave|q [2] $ ((\d[1]~13 ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )
// \d[2]~11  = CARRY(((!\d[1]~13 ) # (!\s_slave|q [2])))
// \d[2]~11COUT1_17  = CARRY(((!\d[1]~13COUT1_16 ) # (!\s_slave|q [2])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\s_slave|q [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(gnd),
	.cin0(\d[1]~13 ),
	.cin1(\d[1]~13COUT1_16 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[2]),
	.cout(),
	.cout0(\d[2]~11 ),
	.cout1(\d[2]~11COUT1_17 ));
// synopsys translate_off
defparam \d[2] .cin0_used = "true";
defparam \d[2] .cin1_used = "true";
defparam \d[2] .lut_mask = "3c3f";
defparam \d[2] .operation_mode = "arithmetic";
defparam \d[2] .output_mode = "reg_only";
defparam \d[2] .register_cascade_mode = "off";
defparam \d[2] .sum_lutc_input = "cin";
defparam \d[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N7
maxii_lcell \s_slave|q[2] (
// Equation(s):
// \s_slave|q [2] = DFFEAS((\s_slave|ss_state [1] & (((\s_slave|q [1])))) # (!\s_slave|ss_state [1] & ((\s_slave|ss_state [2] & (d[2])) # (!\s_slave|ss_state [2] & ((\s_slave|q [1]))))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [1]),
	.datab(\s_slave|ss_state [2]),
	.datac(d[2]),
	.datad(\s_slave|q [1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[2] .lut_mask = "fb40";
defparam \s_slave|q[2] .operation_mode = "normal";
defparam \s_slave|q[2] .output_mode = "reg_only";
defparam \s_slave|q[2] .register_cascade_mode = "off";
defparam \s_slave|q[2] .sum_lutc_input = "datac";
defparam \s_slave|q[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N3
maxii_lcell \d[3] (
// Equation(s):
// d[3] = DFFEAS((\s_slave|q [3] $ ((!\d[2]~11 ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )
// \d[3]~9  = CARRY(((\s_slave|q [3] & !\d[2]~11 )))
// \d[3]~9COUT1_18  = CARRY(((\s_slave|q [3] & !\d[2]~11COUT1_17 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\s_slave|q [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(gnd),
	.cin0(\d[2]~11 ),
	.cin1(\d[2]~11COUT1_17 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[3]),
	.cout(),
	.cout0(\d[3]~9 ),
	.cout1(\d[3]~9COUT1_18 ));
// synopsys translate_off
defparam \d[3] .cin0_used = "true";
defparam \d[3] .cin1_used = "true";
defparam \d[3] .lut_mask = "c30c";
defparam \d[3] .operation_mode = "arithmetic";
defparam \d[3] .output_mode = "reg_only";
defparam \d[3] .register_cascade_mode = "off";
defparam \d[3] .sum_lutc_input = "cin";
defparam \d[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N1
maxii_lcell \s_slave|q[3] (
// Equation(s):
// \s_slave|q [3] = DFFEAS((\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & (\s_slave|q [2])) # (!\s_slave|ss_state [1] & ((d[3]))))) # (!\s_slave|ss_state [2] & (((\s_slave|q [2])))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|ss_state [1]),
	.datac(\s_slave|q [2]),
	.datad(d[3]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[3] .lut_mask = "f2d0";
defparam \s_slave|q[3] .operation_mode = "normal";
defparam \s_slave|q[3] .output_mode = "reg_only";
defparam \s_slave|q[3] .register_cascade_mode = "off";
defparam \s_slave|q[3] .sum_lutc_input = "datac";
defparam \s_slave|q[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N4
maxii_lcell \d[4] (
// Equation(s):
// d[4] = DFFEAS((\s_slave|q [4] $ ((\d[3]~9 ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )
// \d[4]~7  = CARRY(((!\d[3]~9COUT1_18 ) # (!\s_slave|q [4])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\s_slave|q [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(gnd),
	.cin0(\d[3]~9 ),
	.cin1(\d[3]~9COUT1_18 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[4]),
	.cout(\d[4]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \d[4] .cin0_used = "true";
defparam \d[4] .cin1_used = "true";
defparam \d[4] .lut_mask = "3c3f";
defparam \d[4] .operation_mode = "arithmetic";
defparam \d[4] .output_mode = "reg_only";
defparam \d[4] .register_cascade_mode = "off";
defparam \d[4] .sum_lutc_input = "cin";
defparam \d[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N9
maxii_lcell \s_slave|q[4] (
// Equation(s):
// \s_slave|q [4] = DFFEAS((\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & (\s_slave|q [3])) # (!\s_slave|ss_state [1] & ((d[4]))))) # (!\s_slave|ss_state [2] & (\s_slave|q [3])), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|q [3]),
	.datac(d[4]),
	.datad(\s_slave|ss_state [1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[4] .lut_mask = "cce4";
defparam \s_slave|q[4] .operation_mode = "normal";
defparam \s_slave|q[4] .output_mode = "reg_only";
defparam \s_slave|q[4] .register_cascade_mode = "off";
defparam \s_slave|q[4] .sum_lutc_input = "datac";
defparam \s_slave|q[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N5
maxii_lcell \d[5] (
// Equation(s):
// d[5] = DFFEAS((\s_slave|q [5] $ ((!\d[4]~7 ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )
// \d[5]~5  = CARRY(((\s_slave|q [5] & !\d[4]~7 )))
// \d[5]~5COUT1_19  = CARRY(((\s_slave|q [5] & !\d[4]~7 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\s_slave|q [5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(\d[4]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[5]),
	.cout(),
	.cout0(\d[5]~5 ),
	.cout1(\d[5]~5COUT1_19 ));
// synopsys translate_off
defparam \d[5] .cin_used = "true";
defparam \d[5] .lut_mask = "c30c";
defparam \d[5] .operation_mode = "arithmetic";
defparam \d[5] .output_mode = "reg_only";
defparam \d[5] .register_cascade_mode = "off";
defparam \d[5] .sum_lutc_input = "cin";
defparam \d[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N0
maxii_lcell \s_slave|q[5] (
// Equation(s):
// \s_slave|q [5] = DFFEAS((\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & ((\s_slave|q [4]))) # (!\s_slave|ss_state [1] & (d[5])))) # (!\s_slave|ss_state [2] & (((\s_slave|q [4])))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|ss_state [1]),
	.datac(d[5]),
	.datad(\s_slave|q [4]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[5] .lut_mask = "fd20";
defparam \s_slave|q[5] .operation_mode = "normal";
defparam \s_slave|q[5] .output_mode = "reg_only";
defparam \s_slave|q[5] .register_cascade_mode = "off";
defparam \s_slave|q[5] .sum_lutc_input = "datac";
defparam \s_slave|q[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N6
maxii_lcell \d[6] (
// Equation(s):
// d[6] = DFFEAS(\s_slave|q [6] $ (((((!\d[4]~7  & \d[5]~5 ) # (\d[4]~7  & \d[5]~5COUT1_19 ))))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )
// \d[6]~3  = CARRY(((!\d[5]~5 )) # (!\s_slave|q [6]))
// \d[6]~3COUT1_20  = CARRY(((!\d[5]~5COUT1_19 )) # (!\s_slave|q [6]))

	.clk(\clk~combout ),
	.dataa(\s_slave|q [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(\d[4]~7 ),
	.cin0(\d[5]~5 ),
	.cin1(\d[5]~5COUT1_19 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[6]),
	.cout(),
	.cout0(\d[6]~3 ),
	.cout1(\d[6]~3COUT1_20 ));
// synopsys translate_off
defparam \d[6] .cin0_used = "true";
defparam \d[6] .cin1_used = "true";
defparam \d[6] .cin_used = "true";
defparam \d[6] .lut_mask = "5a5f";
defparam \d[6] .operation_mode = "arithmetic";
defparam \d[6] .output_mode = "reg_only";
defparam \d[6] .register_cascade_mode = "off";
defparam \d[6] .sum_lutc_input = "cin";
defparam \d[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N8
maxii_lcell \s_slave|q[6] (
// Equation(s):
// \s_slave|q [6] = DFFEAS((\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & (\s_slave|q [5])) # (!\s_slave|ss_state [1] & ((d[6]))))) # (!\s_slave|ss_state [2] & (\s_slave|q [5])), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|q [5]),
	.datac(d[6]),
	.datad(\s_slave|ss_state [1]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[6] .lut_mask = "cce4";
defparam \s_slave|q[6] .operation_mode = "normal";
defparam \s_slave|q[6] .output_mode = "reg_only";
defparam \s_slave|q[6] .register_cascade_mode = "off";
defparam \s_slave|q[6] .sum_lutc_input = "datac";
defparam \s_slave|q[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N8
maxii_lcell \s_slave|q[7] (
// Equation(s):
// \s_slave|q [7] = DFFEAS((\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & ((\s_slave|q [6]))) # (!\s_slave|ss_state [1] & (d[7])))) # (!\s_slave|ss_state [2] & (((\s_slave|q [6])))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , 
// \s_slave|mosi_counter[3]~4 , , , , )

	.clk(\clk~combout ),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|ss_state [1]),
	.datac(d[7]),
	.datad(\s_slave|q [6]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|mosi_counter[3]~4 ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\s_slave|q [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|q[7] .lut_mask = "fd20";
defparam \s_slave|q[7] .operation_mode = "normal";
defparam \s_slave|q[7] .output_mode = "reg_only";
defparam \s_slave|q[7] .register_cascade_mode = "off";
defparam \s_slave|q[7] .sum_lutc_input = "datac";
defparam \s_slave|q[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N7
maxii_lcell \d[7] (
// Equation(s):
// d[7] = DFFEAS((((!\d[4]~7  & \d[6]~3 ) # (\d[4]~7  & \d[6]~3COUT1_20 ) $ (!\s_slave|q [7]))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \s_slave|finished~0_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\s_slave|q [7]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\s_slave|finished~0_combout ),
	.cin(\d[4]~7 ),
	.cin0(\d[6]~3 ),
	.cin1(\d[6]~3COUT1_20 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(d[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \d[7] .cin0_used = "true";
defparam \d[7] .cin1_used = "true";
defparam \d[7] .cin_used = "true";
defparam \d[7] .lut_mask = "f00f";
defparam \d[7] .operation_mode = "normal";
defparam \d[7] .output_mode = "reg_only";
defparam \d[7] .register_cascade_mode = "off";
defparam \d[7] .sum_lutc_input = "cin";
defparam \d[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N0
maxii_lcell \s_slave|miso~0 (
// Equation(s):
// \s_slave|miso~0_combout  = (\s_slave|ss_state [2] & (((d[7])))) # (!\s_slave|ss_state [2] & ((\s_slave|ss_state [1] & (d[7])) # (!\s_slave|ss_state [1] & ((\s_slave|q [7])))))

	.clk(gnd),
	.dataa(\s_slave|ss_state [2]),
	.datab(\s_slave|ss_state [1]),
	.datac(d[7]),
	.datad(\s_slave|q [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|miso~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|miso~0 .lut_mask = "f1e0";
defparam \s_slave|miso~0 .operation_mode = "normal";
defparam \s_slave|miso~0 .output_mode = "comb_only";
defparam \s_slave|miso~0 .register_cascade_mode = "off";
defparam \s_slave|miso~0 .sum_lutc_input = "datac";
defparam \s_slave|miso~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N9
maxii_lcell \s_slave|miso~1 (
// Equation(s):
// \s_slave|miso~1_combout  = (!\s_slave|ss_state [1] & ((\s_slave|ss_state [2]) # ((!\s_slave|finished~0_combout ))))

	.clk(gnd),
	.dataa(\s_slave|ss_state [1]),
	.datab(\s_slave|ss_state [2]),
	.datac(\s_slave|finished~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\s_slave|miso~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \s_slave|miso~1 .lut_mask = "4545";
defparam \s_slave|miso~1 .operation_mode = "normal";
defparam \s_slave|miso~1 .output_mode = "comb_only";
defparam \s_slave|miso~1 .register_cascade_mode = "off";
defparam \s_slave|miso~1 .sum_lutc_input = "datac";
defparam \s_slave|miso~1 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_28,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \miso~I (
	.datain(\s_slave|miso~0_combout ),
	.oe(\s_slave|miso~1_combout ),
	.combout(),
	.padio(miso));
// synopsys translate_off
defparam \miso~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led~I (
	.datain(\s_slave|finished~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(led));
// synopsys translate_off
defparam \led~I .operation_mode = "output";
// synopsys translate_on

endmodule
